pipeline {

    agent {
        label 'jdk-8'
    }

    tools {
        maven "maven-3.6.3"
    }

    parameters {
        booleanParam(name: 'DRY_RUN', defaultValue: false)
        string(name: 'VERSION', defaultValue: '')

        string(name: 'WORLD_EDIT_VERSION', defaultValue: '7.2.5')
        string(name: 'WORLD_GUARD_VERSION', defaultValue: '7.0.4')
        string(name: 'ANNOTATIONS_VERSION', defaultValue: '20.1.0')
        string(name: 'JOOR_JAVA_8_VERSION', defaultValue: '0.9.13')
        string(name: 'LOMBOK_VERSION', defaultValue: '1.18.20')
        string(name: 'JUNIT_VERSION', defaultValue: '5.7.1')
    }

    triggers {
        pollSCM('H 3 * * *') // Start Nightly after Spigot Builds
    }

    stages {

        stage('Dry Run') {
            when {
                expression { params.DRY_RUN }
            }

            steps {
                error('Dry Run complete')
            }
        }

        stage("Prepare") {
            steps {
                dir("VarLightSpigot") {
                    sh 'if [ -d "libraries" ]; then rm -rf "libraries"; fi'
                    sh "mkdir libraries"
                }
            }
        }

        stage("Build Core") {
            steps {
                dir("VarLightCore") {
                    sh "mvn -B clean package install -Dlombok-version=${params.LOMBOK_VERSION} -Dannotations-version=${params.ANNOTATIONS_VERSION} -Djunit-version=${params.JUNIT_VERSION}"
                }
            }
        }

        stage("Build Plugin") {
            steps {
                dir("VarLightSpigot/libraries") {
                    copyArtifacts(projectName: 'Spigot 1.16.5')

                    sh "chmod +x install.sh"
                    sh "./install.sh"
                }
                
                dir ("VarLightSpigot") {
                    script {
                        def version;

                        if (params.VERSION.isEmpty()) {
                            version = "${BUILD_NUMBER}"
                        } else {
                            version = params.VERSION
                        }

                        sh "mvn -B clean package install -Dvarlight.version=$version -Dannotations.version=${params.ANNOTATIONS_VERSION} -Djoor.version=${params.JOOR_JAVA_8_VERSION} -Dlombok.version=${params.LOMBOK_VERSION} -Dworldedit.version=${params.WORLD_EDIT_VERSION} -Dworldguard.version=${params.WORLD_GUARD_VERSION}"
                    }
                }
            }
        }
    }

    post {
        success {
            archiveArtifacts artifacts: 'VarLightSpigot/target/VarLight-*.jar', fingerprint: true, followSymlinks: false
        }

        always {
            recordIssues(tools: [java(), mavenConsole(), junitParser(pattern: 'VarLightCore/target/**/*.xml'), junitParser(pattern: 'VarLightSpigot/target/**/*.xml')])
            junit allowEmptyResults: true, testResults: 'VarLightCore/target/**/*.xml'
        }
    }
}